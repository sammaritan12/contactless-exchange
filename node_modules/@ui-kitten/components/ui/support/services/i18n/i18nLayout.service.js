"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_native_1 = require("react-native");
const i18nLayoutFlexMap_1 = require("./i18nLayoutFlexMap");
class NativeI18nLayoutService {
    isRTL() {
        return react_native_1.I18nManager.isRTL;
    }
    select(ltr, rtl) {
        return this.isRTL() ? rtl : ltr;
    }
    /**
     * Iterates through I18nLayoutFlexMap and reverses style values if needed.
     *
     * @param {ViewStyle} source - style to convert
     * @param {boolean} rtl - is layout currently in RTL mode (Needed for tests, because unable to mock this)
     *
     * @returns {ViewStyle} - style reversed to fit i18n
     */
    toI18nStyle(source, rtl = this.isRTL()) {
        const i18nStyle = Object.keys(i18nLayoutFlexMap_1.I18nLayoutFlexMap).reduce((style, prop) => {
            const currentStyleValue = source[prop];
            if (currentStyleValue) {
                const i18nStyleValue = i18nLayoutFlexMap_1.I18nLayoutFlexMap[prop].toI18n(currentStyleValue, rtl);
                return { ...style, [prop]: i18nStyleValue };
            }
            return style;
        }, {});
        return { ...source, ...i18nStyle };
    }
}
exports.I18nLayoutService = new NativeI18nLayoutService();
//# sourceMappingURL=i18nLayout.service.js.map