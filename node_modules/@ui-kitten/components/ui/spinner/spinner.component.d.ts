import React from 'react';
import { ViewProps } from 'react-native';
import { StyledComponentProps } from '../../theme';
export interface SpinnerProps extends StyledComponentProps, ViewProps {
    animating?: boolean;
    size?: string;
    status?: string;
}
export declare type SpinnerElement = React.ReactElement<SpinnerProps>;
/**
 * Styled `Spinner` component. Designed to be used as `ActivityIndicator` component
 *
 * @extends React.Component
 *
 * @property {boolean} animating - Determines whether component is animating. Default is `true`.
 *
 * @property {string} status - Determines the status of the component.
 * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.
 * Default is `primary`.
 *
 * @property {string} size - Determines the size of the component.
 * Can be `tiny`, `small`, `medium`, `large`, or `giant`.
 * Default is `medium`.
 *
 * @overview-example SpinnerSimpleUsage
 *
 * @overview-example SpinnerSizes
 *
 * @overview-example SpinnerStatuses
 *
 * @example SpinnerDataLoading
 */
export declare class SpinnerComponent extends React.PureComponent<SpinnerProps> {
    static styledComponentName: string;
    static defaultProps: Partial<SpinnerProps>;
    private animation;
    private get containerSize();
    componentDidMount(): void;
    componentDidUpdate(prevProps: SpinnerProps): void;
    componentWillUnmount(): void;
    private startAnimation;
    private stopAnimation;
    private getComponentStyle;
    private renderArcElement;
    render(): React.ReactElement<ViewProps>;
}
export declare const Spinner: import("../../theme").StyledComponentClass<SpinnerProps>;
