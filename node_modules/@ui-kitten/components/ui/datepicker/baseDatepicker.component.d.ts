import React from 'react';
import { ImageProps, ImageStyle, StyleProp, TextStyle, TouchableOpacityProps, ViewProps, ViewStyle } from 'react-native';
import { StyledComponentProps, StyleType } from '../../theme';
import { IconElement } from '../icon/icon.component';
import { BaseCalendarProps } from '../calendar/baseCalendar.component';
import { CalendarElement } from '../calendar/calendar.component';
import { RangeCalendarElement } from '../calendar/rangeCalendar.component';
import { PopoverPlacement } from '../popover/type';
declare type IconProp = (style: StyleType) => IconElement;
export interface BaseDatepickerProps<D = Date> extends StyledComponentProps, TouchableOpacityProps, BaseCalendarProps<D> {
    controlStyle?: StyleProp<ViewStyle>;
    label?: string;
    caption?: string;
    captionIcon?: IconProp;
    icon?: (style: ImageStyle) => React.ReactElement<ImageProps>;
    status?: string;
    size?: string;
    placeholder?: string;
    labelStyle?: StyleProp<TextStyle>;
    captionStyle?: StyleProp<TextStyle>;
    placement?: PopoverPlacement | string;
    backdropStyle?: StyleProp<ViewStyle>;
    onFocus?: () => void;
    onBlur?: () => void;
}
interface State {
    visible: boolean;
}
export declare abstract class BaseDatepickerComponent<P, D = Date> extends React.Component<BaseDatepickerProps<D> & P, State> {
    static defaultProps: Partial<BaseDatepickerProps>;
    state: State;
    private popoverRef;
    show: () => void;
    hide: () => void;
    focus: () => void;
    blur: () => void;
    isFocused: () => boolean;
    abstract clear(): void;
    protected abstract getComponentTitle(): string;
    protected abstract renderCalendar(): CalendarElement<D> | RangeCalendarElement<D>;
    private getComponentStyle;
    private onPress;
    private onPressIn;
    private onPressOut;
    private onPickerVisible;
    private onPickerInvisible;
    private setPickerVisible;
    private setPickerInvisible;
    private renderIconElement;
    private renderLabelElement;
    private renderCaptionElement;
    private renderCaptionIconElement;
    private renderTextElement;
    private renderControlChildren;
    private renderControlElement;
    private renderComponentChildren;
    render(): React.ReactElement<ViewProps>;
}
export {};
