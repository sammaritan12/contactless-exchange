/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { ImageStyle, StyleProp, TextStyle, TouchableOpacityProps } from 'react-native';
import { StyledComponentProps } from '../../theme';
import { IconElement } from '../icon/icon.component';
import { WebEventResponderCallbacks } from '../support/services';
declare type IconProp = (style: ImageStyle) => IconElement;
declare type ContentElement = React.ReactElement;
export interface TabProps extends StyledComponentProps, TouchableOpacityProps {
    title?: string;
    titleStyle?: StyleProp<TextStyle>;
    icon?: IconProp;
    selected?: boolean;
    onSelect?: (selected: boolean) => void;
    children?: ContentElement;
}
export declare type TabElement = React.ReactElement<TabProps>;
/**
 * `Tab` component is a part of `TabBar` or `TabView` component.
 * `TabView` Tabs should be wrapped in `TabBar` or `TabView` to provide usable component.
 * See usage examples at `TabView` component documentation.
 *
 * @extends React.Component
 *
 * @property {string} title - Determines the title of the component.
 *
 * @property {StyleProp<TextStyle>} titleStyle - Determines style of the title.
 *
 * @property {ReactElement} children - Determines content of the tab.
 *
 * @property {(style: StyleType) => ReactElement} icon - Determines icon of the component.
 *
 * @property {boolean} selected - Determines tab selection state.
 *
 * @property {(selected: boolean) => void} onSelect = Fires on onSelect event.
 *
 * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.
 *
 * @overview-example TabSimpleUsage
 *
 * @overview-example TabWithIcon
 *
 * @example TabWithExternalSourceIcon
 *
 * @example TabInlineStyling
 */
export declare class TabComponent extends React.Component<TabProps> implements WebEventResponderCallbacks {
    static styledComponentName: string;
    static defaultProps: Partial<TabProps>;
    private webEventResponder;
    onMouseEnter: () => void;
    onMouseLeave: () => void;
    private onPress;
    private getComponentStyle;
    private renderTitleElement;
    private renderIconElement;
    private renderComponentChildren;
    render(): React.ReactElement<TouchableOpacityProps>;
}
export declare const Tab: import("../../theme").StyledComponentClass<TabProps>;
export {};
