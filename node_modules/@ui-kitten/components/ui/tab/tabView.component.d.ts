/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { StyleProp, ViewProps, ViewStyle } from 'react-native';
import { TabElement } from './tab.component';
declare type ChildrenProp = TabElement | TabElement[];
export interface TabViewProps extends ViewProps {
    children: ChildrenProp;
    selectedIndex?: number;
    tabBarStyle?: StyleProp<ViewStyle>;
    indicatorStyle?: StyleProp<ViewStyle>;
    shouldLoadComponent?: (index: number) => boolean;
    onOffsetChange?: (offset: number) => void;
    onSelect?: (index: number) => void;
}
export declare type TabViewElement = React.ReactElement<TabViewProps>;
/**
 * `TabView` is a dynamic tabset component. Allows flipping through the tab "pages".
 *
 * @extends React.Component
 **
 * @property {number} selectedIndex - Determines current tab index.
 *
 * @property {StyleProp<ViewStyle>} tabBarStyle - Determines style TabBar component.
 *
 * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of selected tab indicator.
 *
 * @property {(index: number) => void} onSelect - Fires on "page" select with corresponding index.
 *
 * @property {ReactElement<TabProps> | ReactElement<TabProps>[]} children - Determines children of the component.
 *
 * @property {(index: number) => boolean} shouldLoadComponent - Determines loading behavior particular page and can be
 * used for lazy loading.
 *
 * @property {(offset: number) => void} onOffsetChange - Fires on scroll event with current scroll offset.
 *
 * @property {ViewProps} ...ViewProps - Any props applied to View component.
 *
 * @overview-example TabViewSimpleUsage
 *
 * @overview-example TabViewWithIcon
 *
 * @overview-example TabViewLazyLoading
 *
 * @example TabViewInlineStyling
 */
export declare class TabView extends React.Component<TabViewProps> {
    static defaultProps: Partial<TabViewProps>;
    private viewPagerRef;
    private tabBarRef;
    private onBarSelect;
    private onPagerOffsetChange;
    private onPagerSelect;
    private renderComponentChild;
    private renderComponentChildren;
    render(): React.ReactElement<ViewProps>;
}
export {};
