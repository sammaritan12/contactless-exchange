"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const theme_1 = require("../../theme");
const menu_component_1 = require("../menu/menu.component");
/**
 * Styled `Navigation Drawer` component. The principle of rendering a `Drawer` is the same as a rendering a List.
 *
 * @extends React.Component
 *
 * @property {MenuItemType[]} data - Determines the items displayed in drawer menu.
 *
 * @property {string} appearance - Determines the appearance of the component.
 * Can be `default` or `noDivider`.
 * Default is `default`.
 *
 * @property {() => ReactElement} header - Determines the function to render a header. Optional.
 *
 * @property {() => ReactElement} footer - Determines the function to render a footer. Optional.
 *
 * @property {(index: number, event: GestureResponderEvent) => void} onSelect - Determines the function to handle
 * menu item press.
 *
 * @property {MenuProps} ...MenuProps - Any props applied to Menu component.
 *
 * @overview-example DrawerSimpleUsage
 *
 * @overview-example Using with React Navigation
 *
 * ```
 * import React from 'react';
 * import { NavigationContainer } from '@react-navigation/native';
 * import { createDrawerNavigator } from '@react-navigation/drawer';
 * import { Drawer as UIKittenDrawer, Layout, Text } from '../..';
 *
 * const Drawer = createDrawerNavigator();
 *
 * const UsersScreen = () => (
 *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>
 *     <Text category='h1'>USERS</Text>
 *   </Layout>
 * );
 *
 * const OrdersScreen = () => (
 *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>
 *     <Text category='h1'>ORDERS</Text>
 *   </Layout>
 * );
 *
 * const DrawerContent = ({ navigation, state }) => {
 *
 *   const onSelect = (index) => {
 *     navigation.navigate(state.routeNames[index]);
 *   };
 *
 *   return (
 *     <UIKittenDrawer
 *       data={[{ title: 'Home' }, { title: 'Settings' }]}
 *       selectedIndex={state.index}
 *       onSelect={onSelect}
 *     />
 *   );
 * };
 *
 * export const DrawerNavigator = () => (
 *   <Drawer.Navigator drawerContent={props => <DrawerContent {...props}/>}>
 *     <Drawer.Screen name='Users' component={UsersScreen}/>
 *     <Drawer.Screen name='Orders' component={OrdersScreen}/>
 *   </Drawer.Navigator>
 * );
 *
 * export const AppNavigator = () => (
 *   <NavigationContainer>
 *     <DrawerNavigator/>
 *   </NavigationContainer>
 * );
 * ```
 *
 * @overview-example DrawerWithIcons
 *
 * @overview-example DrawerHeader
 *
 * @overview-example DrawerFooter
 *
 * @example DrawerCustomHeader
 *
 * @example DrawerNotificationBadgeItem
 */
class DrawerComponent extends react_1.default.Component {
    constructor() {
        super(...arguments);
        this.renderHeader = () => {
            return this.props.header();
        };
        this.renderFooter = () => {
            return this.props.footer();
        };
        this.renderMenu = () => {
            const { style, header, footer, themedStyle, ...restProps } = this.props;
            return (react_1.default.createElement(menu_component_1.Menu, Object.assign({ style: themedStyle, showsVerticalScrollIndicator: false, bounces: false }, restProps)));
        };
        this.renderComponentChildren = () => {
            const { header, footer } = this.props;
            return [
                header && this.renderHeader(),
                this.renderMenu(),
                footer && this.renderFooter(),
            ];
        };
    }
    render() {
        const [header, menu, footer] = this.renderComponentChildren();
        return (react_1.default.createElement(react_1.default.Fragment, null,
            header,
            menu,
            footer));
    }
}
DrawerComponent.styledComponentName = 'Drawer';
exports.Drawer = theme_1.styled(DrawerComponent);
//# sourceMappingURL=drawer.component.js.map