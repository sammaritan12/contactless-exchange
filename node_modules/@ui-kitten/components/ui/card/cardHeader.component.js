"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const react_native_1 = require("react-native");
const listItem_component_1 = require("../list/listItem.component");
/**
 * Styled `CardHeader` component can be used like `header` in the `Card` component.
 *
 * @extends React.Component
 *
 * @property {string} title - Determines the title of the ListItem.
 *
 * @property {string} description - Determines the description of the ListItem's title.
 *
 * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.
 *
 * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.
 *
 * @property {StyleProp<ViewStyle>} accentStyle - Determines style of the stripe element.
 *
 * @property {StyleProp<ViewStyle>} headerStyle - Determines style of the header container element.
 *
 * @property {ViewProps} ...ViewProps - Any props applied to View component.
 */
class CardHeader extends react_1.default.Component {
    render() {
        const { accentStyle, style, headerStyle, ...restProps } = this.props;
        return (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement(react_native_1.View, { style: accentStyle }),
            react_1.default.createElement(listItem_component_1.ListItem, Object.assign({ style: [style, headerStyle] }, restProps))));
    }
}
exports.CardHeader = CardHeader;
//# sourceMappingURL=cardHeader.component.js.map