/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { GestureResponderEvent, ImageStyle, StyleProp, TextStyle, TouchableOpacityProps, ViewStyle } from 'react-native';
import { StyledComponentProps } from '../../theme';
import { SelectOptionType } from './selectOption.component';
import { IconElement } from '../icon/icon.component';
declare type IconProp = (style: ImageStyle, visible: boolean) => IconElement;
export declare type SelectOption = SelectOptionType[] | SelectOptionType;
export declare type KeyExtractorType = (item: SelectOptionType) => string;
export interface SelectProps extends StyledComponentProps, TouchableOpacityProps {
    data: SelectOptionType[];
    multiSelect?: boolean;
    selectedOption?: SelectOption;
    textStyle?: StyleProp<TextStyle>;
    placeholder?: string;
    placeholderStyle?: StyleProp<TextStyle>;
    label?: string;
    labelStyle?: StyleProp<TextStyle>;
    controlStyle?: StyleProp<ViewStyle>;
    icon?: IconProp;
    onSelect: (option: SelectOption, event?: GestureResponderEvent) => void;
    onFocus?: () => void;
    onBlur?: () => void;
    status?: string;
    size?: string;
    keyExtractor?: KeyExtractorType;
}
export declare type SelectElement = React.ReactElement<SelectProps>;
export declare const Select: import("../../theme").StyledComponentClass<SelectProps>;
export {};
